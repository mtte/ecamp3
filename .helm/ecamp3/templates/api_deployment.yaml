apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "api.name" . }}
  labels:
    {{- include "api.selectorLabels" . | nindent 4 }}
    {{- include "app.commonLabels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.api.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "api.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "api.selectorLabels" . | nindent 8 }}
      annotations:
        # This deployment should be restarted whenever either the configmap or the secrets change
        # because the containers depend on environment variables from these places during startup
        checksum/config: {{ include (print $.Template.BasePath "/api_configmap.yaml") . | sha256sum }}
        checksum/secrets: {{ include (print $.Template.BasePath "/api_secrets.yaml") . | sha256sum }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "app.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      enableServiceLinks: false
      containers:
        - name: {{ .Chart.Name }}-api
          {{/* Define the api container as a template, so it can be reused in other places */}}
          {{- define "api.container" }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.api.image.repository }}:{{ .Values.api.image.tag | default .Values.imageTag }}"
          imagePullPolicy: {{ .Values.api.image.pullPolicy }}
          ports:
            - name: api-http
              containerPort: {{ .Values.api.service.port }}
              protocol: TCP
            - name: api-metrics
              containerPort: {{ .Values.api.metrics.port }}
              protocol: TCP     
          envFrom:
            - configMapRef:
                name: {{ include "api.name" . }}-configmap
          env:
            - name: SERVER_NAME
              value: :3001
            - name: COOKIE_SECURE
              value: 'true'
            - name: APP_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ include "api.name" . }}
                  key: php-app-secret
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: {{ include "api.name" . }}
                  key: database-url
            - name: MAILER_DSN
              valueFrom:
                secretKeyRef:
                  name: {{ include "api.name" . }}
                  key: mailer-dsn
            - name: JWT_PASSPHRASE
              valueFrom:
                secretKeyRef:
                  name: {{ include "api.name" . }}
                  key: php-jwt-passphrase
            - name: RECAPTCHA_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ include "api.name" . }}
                  key: recaptcha-secret
            {{- if .Values.api.oauth.google.clientId }}
            - name: OAUTH_GOOGLE_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: {{ include "api.name" . }}
                  key: oauth-google-client-id
            - name: OAUTH_GOOGLE_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ include "api.name" . }}
                  key: oauth-google-client-secret
            {{- end }}
            {{- if .Values.api.oauth.pbsmidata.clientId }}
            - name: OAUTH_PBSMIDATA_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: {{ include "api.name" . }}
                  key: oauth-pbsmidata-client-id
            - name: OAUTH_PBSMIDATA_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ include "api.name" . }}
                  key: oauth-pbsmidata-client-secret
            - name: OAUTH_PBSMIDATA_BASE_URL
              valueFrom:
                secretKeyRef:
                  name: {{ include "api.name" . }}
                  key: oauth-pbsmidata-base-url
            {{- end }}
            {{- if .Values.api.oauth.cevidb.clientId }}
            - name: OAUTH_CEVIDB_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: {{ include "api.name" . }}
                  key: oauth-cevidb-client-id
            - name: OAUTH_CEVIDB_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ include "api.name" . }}
                  key: oauth-cevidb-client-secret
            - name: OAUTH_CEVIDB_BASE_URL
              valueFrom:
                secretKeyRef:
                  name: {{ include "api.name" . }}
                  key: oauth-cevidb-base-url
            {{- end }}
            {{- if .Values.api.oauth.jubladb.clientId }}
            - name: OAUTH_JUBLADB_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: {{ include "api.name" . }}
                  key: oauth-jubladb-client-id
            - name: OAUTH_JUBLADB_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ include "api.name" . }}
                  key: oauth-jubladb-client-secret
            - name: OAUTH_JUBLADB_BASE_URL
              valueFrom:
                secretKeyRef:
                  name: {{ include "api.name" . }}
                  key: oauth-jubladb-base-url
            {{- end }}
            {{- if .Values.api.oauth.jemkdb.clientId }}
            - name: OAUTH_JEMKDB_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: {{ include "api.name" . }}
                  key: oauth-jemkdb-client-id
            - name: OAUTH_JEMKDB_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ include "api.name" . }}
                  key: oauth-jemkdb-client-secret
            - name: OAUTH_JEMKDB_BASE_URL
              valueFrom:
                secretKeyRef:
                  name: {{ include "api.name" . }}
                  key: oauth-jemkdb-base-url
            {{- end }}
          volumeMounts:
            - mountPath: /app/config/jwt/public.pem
              name: jwt-keypair
              subPath: public.pem
            - mountPath: /app/config/jwt/private.pem
              name: jwt-keypair
              subPath: private.pem
          lifecycle:
            preStop:
              exec:
                command: ["/bin/sh", "-c", "/bin/sleep 1; kill -QUIT 1"]
          {{- end }}
          {{- template "api.container" . }}
          resources:
            {{- toYaml .Values.api.resources | nindent 12 }}
          readinessProbe:
            tcpSocket:
              port: 3001
            periodSeconds: 10
            timeoutSeconds: 5
          livenessProbe:
            tcpSocket:
              port: 3001
            periodSeconds: 10
            timeoutSeconds: 5
          startupProbe:
            tcpSocket:
              port: 3001
            failureThreshold: 10
            periodSeconds: 15
            timeoutSeconds: 10

      volumes:
      - name: php-socket
        emptyDir: {}
      - name: jwt-keypair
        secret:
          secretName: {{ include "api.name" . }}
          items:
            - key: jwt-public-key
              path: public.pem
            - key: jwt-private-key
              path: private.pem
